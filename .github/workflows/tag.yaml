name: Create Release Builds

on:
  push:
    tags:
      - '*'

jobs:
  once:
    name: Create GitHub release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true


  build:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, macos]
        ruby: [2.7]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{matrix.ruby}}
    - name: Install Deps (Linux)
      run: sudo apt-get update && sudo apt-get install libcurl4-openssl-dev -y
      if: matrix.os == 'ubuntu'
    - name: build release (Linux)
      run: rake release_linux
      if: matrix.os == 'ubuntu'
    - name: build release (macos)
      run: rake release_mac
      if: matrix.os == 'macos'
    - name: Upload release assets (Linux)
      id: upload_assets_linux
      uses: actions/upload-release-asset@v1
      if: matrix.os == 'ubuntu'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: build/linux/helm-oci-linux.tgz
        asset_name: helm-oci-linux.tgz
        asset_content_type: application/octet-stream
    - name: Upload release assets (macos)
      id: upload_assets_macos
      uses: actions/upload-release-asset@v1
      if: matrix.os == 'macos'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: build/macos/helm-oci-macos.tgz
        asset_name: helm-oci-macos.tgz
        asset_content_type: application/octet-stream
